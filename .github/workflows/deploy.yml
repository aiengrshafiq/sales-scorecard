# .github/workflows/deploy.yml

name: Build and Deploy Backend Services to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}

      - name: Build and push sales-enforcer image
        run: |
          cd sales-enforcer
          sed -i 's/\r$//' entrypoint.sh
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/sales-enforcer:${{ github.sha }} .
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/sales-enforcer:${{ github.sha }}

      - name: Deploy sales-enforcer-api
        run: |
          az containerapp update \
            --name sales-enforcer-api \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --image ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/sales-enforcer:${{ github.sha }} \
            --set-env-vars "APP_MODE=api" \
                           "DATABASE_URL=secretref:db-url" \
                           "REDIS_URL=secretref:redis-url" \
                           "PIPEDRIVE_API_TOKEN=secretref:pipedrive-token"

      - name: Deploy sales-enforcer-worker
        run: |
          az containerapp update \
            --name sales-enforcer-worker \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --image ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/sales-enforcer:${{ github.sha }} \
            --set-env-vars "APP_MODE=worker" \
                           "DATABASE_URL=secretref:db-url" \
                           "REDIS_URL=secretref:redis-url" \
                           "PIPEDRIVE_API_TOKEN=secretref:pipedrive-token"